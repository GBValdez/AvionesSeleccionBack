// <auto-generated />
using System;
using AvionesBackNet.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvionesBackNet.Migrations
{
    [DbContext(typeof(AvionesContext))]
    [Migration("20240607203416_cambieLaRelacionDeLosCodigosAaaaxaa")]
    partial class cambieLaRelacionDeLosCodigosAaaaxaa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AvionesBackNet.Models.Aerolinea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Aerolineas");
                });

            modelBuilder.Entity("AvionesBackNet.Models.AerolineaAeropuerto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AerolineaId")
                        .HasColumnType("bigint");

                    b.Property<long>("AeropuertoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDestino")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AerolineaId");

                    b.HasIndex("AeropuertoId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("AerolineaAeropuertos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Aeropuerto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Iata")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Interno")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Latitud")
                        .HasColumnType("longtext");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Longitud")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Oaci")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ZonaHorariaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("ZonaHorariaId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Aeropuertos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Asiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AvionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AvionId");

                    b.HasIndex("ClaseId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Avione", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AerolineaId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CapacidadCarga")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CapacidadCombustible")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CapacidadPasajeros")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint");

                    b.Property<long>("MarcaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModeloId")
                        .HasColumnType("bigint");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TamAsientoPorc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("TipoAvionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AerolineaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("TipoAvionId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Aviones");
                });

            modelBuilder.Entity("AvionesBackNet.Models.BitacoraCuerpo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BitacoraEncabezadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ValorAnterior")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ValorNuevo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BitacoraEncabezadoId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("BitacoraCuerpos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.BitacoraEncabezado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("IdRegistro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("BitacoraEncabezados");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Boleto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AsientoId")
                        .HasColumnType("bigint");

                    b.Property<int>("CantidadMaletasAdquiridas")
                        .HasColumnType("int");

                    b.Property<int>("CantidadMaletasPresentadas")
                        .HasColumnType("int");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long>("EstadoBoletoId")
                        .HasColumnType("bigint");

                    b.Property<long>("VueloId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AsientoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoBoletoId");

                    b.HasIndex("VueloId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Catalogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CatalogoTipoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoTipoId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Catalogos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.CatalogoTipo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("userUpdateId");

                    b.ToTable("CatalogoTipos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CodigoTelefono")
                        .HasColumnType("bigint");

                    b.Property<long>("CodigoTelefonoEmergencia")
                        .HasColumnType("bigint");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("NoPasaporte")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaiseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoTelefono");

                    b.HasIndex("CodigoTelefonoEmergencia");

                    b.HasIndex("PaisId");

                    b.HasIndex("PaiseId");

                    b.HasIndex("UserId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Empleado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AerolineaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<long>("PuestoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("TripulacionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AerolineaId");

                    b.HasIndex("PaisId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("TripulacionId");

                    b.HasIndex("UserId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Paise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Iso3166")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Iso4217")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Tripulacione", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AerolineaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AvionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AerolineaId");

                    b.HasIndex("AvionId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Tripulaciones");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Vuelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AeropuertoDestinoId")
                        .HasColumnType("bigint");

                    b.Property<long>("AeropuertoOrigenId")
                        .HasColumnType("bigint");

                    b.Property<long>("AvionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AeropuertoDestinoId");

                    b.HasIndex("AeropuertoOrigenId");

                    b.HasIndex("AvionId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.VueloClase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClaseId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("VueloId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClaseId");

                    b.HasIndex("VueloId");

                    b.HasIndex("userUpdateId");

                    b.ToTable("VueloClases");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("project.roles.rolEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.HasIndex("userUpdateId");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("project.users.userEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userUpdateId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("userUpdateId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AvionesBackNet.Models.Aerolinea", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Paise", "Pais")
                        .WithMany("Aerolineas")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Pais");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.AerolineaAeropuerto", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Aerolinea", "Aerolinea")
                        .WithMany()
                        .HasForeignKey("AerolineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Aeropuerto", "Aeropuerto")
                        .WithMany()
                        .HasForeignKey("AeropuertoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Aerolinea");

                    b.Navigation("Aeropuerto");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Aeropuerto", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Paise", "Pais")
                        .WithMany("Aeropuertos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "ZonaHoraria")
                        .WithMany()
                        .HasForeignKey("ZonaHorariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Pais");

                    b.Navigation("ZonaHoraria");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Asiento", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Avione", "Avion")
                        .WithMany("Asientos")
                        .HasForeignKey("AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Avion");

                    b.Navigation("Clase");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Avione", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Aerolinea", "Aerolinea")
                        .WithMany("Aviones")
                        .HasForeignKey("AerolineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "TipoAvion")
                        .WithMany()
                        .HasForeignKey("TipoAvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Aerolinea");

                    b.Navigation("Estado");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("TipoAvion");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.BitacoraCuerpo", b =>
                {
                    b.HasOne("AvionesBackNet.Models.BitacoraEncabezado", "BitacoraEncabezado")
                        .WithMany("BitacoraCuerpos")
                        .HasForeignKey("BitacoraEncabezadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("BitacoraEncabezado");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.BitacoraEncabezado", b =>
                {
                    b.HasOne("project.users.userEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("User");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Boleto", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Asiento", "Asiento")
                        .WithMany("Boletos")
                        .HasForeignKey("AsientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Cliente", "Cliente")
                        .WithMany("Boletos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "EstadoBoleto")
                        .WithMany()
                        .HasForeignKey("EstadoBoletoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Vuelo", "Vuelo")
                        .WithMany("Boletos")
                        .HasForeignKey("VueloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Asiento");

                    b.Navigation("Cliente");

                    b.Navigation("EstadoBoleto");

                    b.Navigation("Vuelo");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Catalogo", b =>
                {
                    b.HasOne("AvionesBackNet.Models.CatalogoTipo", "CatalogoTipo")
                        .WithMany("Catalogos")
                        .HasForeignKey("CatalogoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("CatalogoTipo");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.CatalogoTipo", b =>
                {
                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Cliente", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Paise", "CodigoTelefonoObj")
                        .WithMany()
                        .HasForeignKey("CodigoTelefono")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Paise", "CodigoTelefonoEmergenciaObj")
                        .WithMany()
                        .HasForeignKey("CodigoTelefonoEmergencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Paise", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Paise", null)
                        .WithMany("Clientes")
                        .HasForeignKey("PaiseId");

                    b.HasOne("project.users.userEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("CodigoTelefonoEmergenciaObj");

                    b.Navigation("CodigoTelefonoObj");

                    b.Navigation("Pais");

                    b.Navigation("User");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Empleado", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Aerolinea", "Aerolinea")
                        .WithMany("Empleados")
                        .HasForeignKey("AerolineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Paise", "Pais")
                        .WithMany("Empleados")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Catalogo", "Puesto")
                        .WithMany()
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Tripulacione", "Tripulacion")
                        .WithMany("Empleados")
                        .HasForeignKey("TripulacionId");

                    b.HasOne("project.users.userEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Aerolinea");

                    b.Navigation("Pais");

                    b.Navigation("Puesto");

                    b.Navigation("Tripulacion");

                    b.Navigation("User");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Paise", b =>
                {
                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Tripulacione", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Aerolinea", "Aerolinea")
                        .WithMany("Tripulaciones")
                        .HasForeignKey("AerolineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Avione", "Avion")
                        .WithMany("Tripulaciones")
                        .HasForeignKey("AvionId");

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Aerolinea");

                    b.Navigation("Avion");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Vuelo", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Aeropuerto", "AeropuertoDestino")
                        .WithMany()
                        .HasForeignKey("AeropuertoDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Aeropuerto", "AeropuertoOrigen")
                        .WithMany()
                        .HasForeignKey("AeropuertoOrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Avione", "Avion")
                        .WithMany("Vuelos")
                        .HasForeignKey("AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("AeropuertoDestino");

                    b.Navigation("AeropuertoOrigen");

                    b.Navigation("Avion");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.VueloClase", b =>
                {
                    b.HasOne("AvionesBackNet.Models.Catalogo", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvionesBackNet.Models.Vuelo", "Vuelo")
                        .WithMany("VueloClases")
                        .HasForeignKey("VueloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("Clase");

                    b.Navigation("Vuelo");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("project.roles.rolEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("project.users.userEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("project.users.userEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("project.roles.rolEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.users.userEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("project.users.userEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("project.roles.rolEntity", b =>
                {
                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("project.users.userEntity", b =>
                {
                    b.HasOne("project.users.userEntity", "userUpdate")
                        .WithMany()
                        .HasForeignKey("userUpdateId");

                    b.Navigation("userUpdate");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Aerolinea", b =>
                {
                    b.Navigation("Aviones");

                    b.Navigation("Empleados");

                    b.Navigation("Tripulaciones");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Asiento", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Avione", b =>
                {
                    b.Navigation("Asientos");

                    b.Navigation("Tripulaciones");

                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.BitacoraEncabezado", b =>
                {
                    b.Navigation("BitacoraCuerpos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.CatalogoTipo", b =>
                {
                    b.Navigation("Catalogos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Cliente", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Paise", b =>
                {
                    b.Navigation("Aerolineas");

                    b.Navigation("Aeropuertos");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Tripulacione", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("AvionesBackNet.Models.Vuelo", b =>
                {
                    b.Navigation("Boletos");

                    b.Navigation("VueloClases");
                });
#pragma warning restore 612, 618
        }
    }
}
